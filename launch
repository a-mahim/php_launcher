<?php

use Hindbiswas\Phpdotenv\StdIO;
use Hindbiswas\Phpdotenv\DotEnv;

define('ROOTPATH', __DIR__ . '/');


try {
    require_once __DIR__ . '/vendor/autoload.php';
} catch (\Throwable $th) {
    shell_exec('composer install');
    require_once __DIR__ . '/vendor/autoload.php';
}

require_once __DIR__ . '/core/Func/functions.php';
require_once __DIR__ . '/core/Cmd/stdio.php';

$commands = [
    'install' => [],
    'create' => [
        'table',
        'seed',
    ],
    'migrate' => [
        'flush',
        'create',
        'seed',
        'dump',
    ]
];

$args = array_slice($argv, 1);
if (empty($args) || $args[0] == 'install' || $args[0] == 'i') {
    require_once __DIR__ . '/core/Cmd/bootstrap.php';
    exit();
}


if (array_key_exists($args[0], $commands)) {
    $subCommands = $commands[$args[0]];
    if (in_array($args[1], $subCommands)) {
        $dotEnv = new DotEnv(ROOTPATH . 'shell'); // Location where .env file exists
        $dotEnv->load();

        define('DB_HOST', $_ENV['DB_HOST']);
        define('DB_PORT', $_ENV['DB_PORT']);
        define('DB_NAME', $_ENV['DB_DATABASE']);
        define('DB_USER', $_ENV['DB_USERNAME']);
        define('DB_PASS', $_ENV['DB_PASSWORD']);
        
        $name = $args[0] . '_' . $args[1];
        require_once  __DIR__ . "/core/Cmd/$name.php";

        StdIO::put('Running `' . StdIO::yellow($name) . '`');

        $argsToPass = array_slice($args, 2);
        call_user_func($name, ...$argsToPass);
    } else StdIO::put("ðŸŸ  No subcomand called `" . $args[1] . "` present for `" . $args[0] . "`");
} else StdIO::put("ðŸŸ  No comand called `" . $args[0] . "` present for `launch.php`");
